{"version":3,"sources":["hero.png","iconmonstr-home-6 (1).svg","iconmonstr-medical-6.svg","home.js","get-started/text-fields/TextInput.js","get-started/text-fields/TextInputs.js","get-started/dropdown/DefaultDropdown.js","get-started/get-started-utils/DropdownUtils.js","get-started/dropdown/Option.js","get-started/dropdown/Dropdown.js","get-started/submit-button/SubmitButton.js","getStarted.js","get-started/get-started-utils/GetStartedUtils.js","logic/getDuration.js","logic/filterByActivityLevel.js","logic/filterByAge.js","results.js","logic/getSports.js","logic/getFrequency.js","logic/filterFreqByActivityLevel.js","logic/filterFreqByAge.js","logic/getIntensity.js","logic/filterIntensityByActivityLevel.js","logic/filterIntensityByAge.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","home","react_default","a","createElement","className","src","hero","alt","Link","to","textInput","props","name","info","nameCaps","toUpperCase","substring","concat","getName","type","value","onChange","textChangeEvent","errorMessage","textInputs","names","map","i","text_fields_TextInput","key","fields","errors","defaultDropdown","style","display","optionVal","currVal","option","split","word","join","dropdown","change","DefaultDropdown","options","Option","error","submitButton","GetStarted","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","age","weight","height","activity","error_msg","goal","goalOptionVal","allnames","keys","e","prevVals","target","newValues","reduce","field","setState","preventDefault","validateAllEverything","toPass","history","push","error_messages","numsWithGoalsErr","curr_err","goals_val","isDefault","startUtils","validateNumericalFields","allGood","fieldsObj","newObj","empty","_this2","onSubmit","handleSubmit","TextInputs","handleChange","dropdown_Dropdown","handleGoalOptionsChange","submit_button_SubmitButton","Component","getDuration","activityLevel","durations","filter","duration","filterByActivityLevel","filterByAge","results","goals","sports","sport","filterByGoals","filterByWeight","getSports","Number","location","slice","frequencies","frequency","filterFreqByActivityLevel","filterFreqByAge","getFrequency","intensities","intensity","filterIntensityByActivityLevel","filterIntensityByAge","getIntensity","App","BrowserRouter","homeIcon","fitIcon","Route","exact","path","component","getStarted","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gYCIzB,SAASC,IACpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8CAEJF,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAK,gBACnCR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,4BCYTM,EAtBG,SAACC,GACf,OACIV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAavB,SAAiBQ,EAAMC,GACnB,IAAIC,EAAWF,EAAK,GAAGG,cAAgBH,EAAKI,UAAU,GACtD,SAAAC,OAAUH,EAAV,MAAAG,OAAuBJ,EAAvB,KAbYK,CAAQP,EAAMC,KAAMD,EAAME,OAGlCZ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OAAOP,KAAMD,EAAMC,KAAMQ,MAAOT,EAAMS,MAAOC,SAAUV,EAAMW,mBAE7ErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASO,EAAMY,cAC9BtB,EAAAC,EAAAC,cAAA,aCQGqB,EApBI,SAACb,GAChB,IAAIE,EAAO,CAAC,QAAS,KAAM,KAAM,kBAAmB,IACpD,OACIZ,EAAAC,EAAAC,cAAA,YAEQQ,EAAMc,MAAMC,IAAI,SAACd,EAAMe,GAAP,OACZ1B,EAAAC,EAAAC,cAACyB,EAAD,CACIC,IAAOF,EACPd,KAAQA,EAAKc,GACbf,KAAQA,EACRQ,MAAST,EAAMmB,OAAOlB,GACtBW,aAAgBZ,EAAMoB,OAAOnB,GAC7BU,gBAAmBX,EAAMW,sBCZjD,IAMeU,EANS,SAACrB,GAAD,OACpBV,EAAAC,EAAAC,cAAA,UAAQ8B,MAAO,CAACC,SCJaC,EDI0BxB,EAAMyB,QCF5C,gBAAdD,EACQ,QAEJ,SDDiEf,MAAM,eAA9E,4BCJJ,IAAiCe,GCWlBE,EARA,SAAC1B,GACZ,OACIV,EAAAC,EAAAC,cAAA,UAAQiB,MAAOT,EAAMS,OACOT,EAAMS,MDGzBkB,MAAM,KACdZ,IAAI,SAACa,GAAD,OAAUA,EAAK,GAAGxB,cAAewB,EAAKvB,UAAU,KACpDwB,KAAK,OEWCC,SAjBE,SAAC9B,GACd,OACIV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,QACAH,EAAAC,EAAAC,cAAA,UAAQiB,MAAOT,EAAMyB,QAASf,SAAUV,EAAM+B,QAC1CzC,EAAAC,EAAAC,cAACwC,EAAD,CAAeP,QAASzB,EAAMyB,UAE1BzB,EAAMiC,QAAQlB,IAAI,SAACW,GAAD,OACdpC,EAAAC,EAAAC,cAAC0C,EAAD,CAAQzB,MAAOiB,OAI3BpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASO,EAAMmC,UCV3BC,SAJI,SAACpC,GAAD,OACfV,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBe,KAAK,SAASC,MAAM,mBCIpC4B,qBACjB,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACT1B,OAAQ,CACJ2B,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRC,SAAU,IAEdC,UAAW,CACPJ,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVE,KAAM,IAEVC,cAAe,eAGnBd,EAAKe,SAAWd,OAAOe,KAAKhB,EAAKO,MAAM1B,QACvCmB,EAAKL,QAAU,CAAC,UAAW,cAAe,eApBjCK,4EAuBAiB,GACT,IClBqBC,EAAUC,EDkB3BC,GClBiBF,EDkBmBf,KAAKI,MAAM1B,OClBpBsC,EDkB4BF,EAAEE,OCjB1DlB,OAAOe,KAAKE,GAAUG,OAAO,SAACD,EAAWE,GAO5C,OANGA,IAAUH,EAAOxD,KAChByD,EAAUE,GAASH,EAAOhD,MAG1BiD,EAAUE,GAASJ,EAASI,GAEzBF,GACR,KDUCjB,KAAKoB,SAAS,CACV1C,OAAQuC,yCAIHH,GAGT,GAFAA,EAAEO,iBACYrB,KAAKsB,wBACR,CACP,IAAIC,EAASvB,KAAKI,MAAM1B,OACxB6C,EAAOb,KAAOV,KAAKI,MAAMO,cACzBX,KAAKzC,MAAMiE,QAAQC,KAAK,WAAYF,oDAKxC,ICCgCG,EDA5BC,ECxBL,SAA8BC,EAAUC,GAC3C,IAAIC,EAA0B,gBAAdD,EAEhB,OADAD,EAASlB,KAAQoB,EAAa,0BAA4B,GACnDF,EDqBoBG,CADC/B,KAAKgC,0BAC6ChC,KAAKI,MAAMO,eACrF,OCDgCe,EDCMC,ICAlC7B,OAAOe,KAAKa,GAAgBR,OAAO,SAACe,EAASzE,GACjD,OAAOyE,GAAoC,KAAzBP,EAAelE,KAClC,KDCCwC,KAAKoB,SAAS,CACVX,UAAWkB,KAER,uCAIP3B,KAAKoB,SAAS,CACVT,cAAe,8DAMnB,ICpCyBuB,EDqCzB,OCrCyBA,EDoCsBlC,KAAKI,MAAM1B,OCnCvCoB,OAAOe,KAAKqB,GAAWhB,OAAO,SAACiB,EAAQhB,GAC1D,IAAIiB,GAASF,EAAUf,GAEvB,OADAgB,EAAOhB,GAAUiB,EAAD,sBAAAvE,OAAgCsD,GAAU,GACnDgB,GACR,oDDqCqBrB,GACpBd,KAAKoB,SAAS,CACVT,cAAeG,EAAEE,OAAOhD,yCAIxB,IAAAqE,EAAArC,KACJ,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBsF,SAAU,SAACxB,GAAD,OAAOuB,EAAKE,aAAazB,KAClEjE,EAAAC,EAAAC,cAACyF,EAAD,CACInE,MAAO2B,KAAKY,SACZlC,OAAQsB,KAAKI,MAAM1B,OACnBC,OAAQqB,KAAKI,MAAMK,UACnBvC,gBAAiB,SAAC4C,GAAD,OAAOuB,EAAKI,aAAa3B,MAE9CjE,EAAAC,EAAAC,cAAC2F,EAAD,CACIlD,QAASQ,KAAKR,QACdR,QAASgB,KAAKI,MAAMO,cACpBrB,OAAQ,SAACwB,GAAD,OAAOuB,EAAKM,wBAAwB7B,IAC5CpB,MAAOM,KAAKI,MAAMK,UAAUC,OAEhC7D,EAAAC,EAAAC,cAAC6F,EAAD,eAzFoBC,cELjC,SAASC,EAAYzC,EAAK0C,GAC7B,IAAIC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrC,OADAA,ECNG,SAA+BA,EAAWD,GAC7C,OAAyB,IAAlBA,EACCC,EAAUC,OAAO,SAAUC,GAAY,OAAOA,GAAY,KACxC,IAAlBH,EACIC,EAAUC,OAAO,SAAUC,GAAY,OAAOA,GAAY,KACxC,IAAlBH,EACIC,EAAUC,OAAO,SAAUC,GAAY,OAAOA,GAAY,KAC1DF,EDDJG,CADZH,EELG,SAAqBA,EAAW3C,GACnC,OAAOA,EAAM,GACT2C,EAAUC,OAAO,SAAAC,GAAQ,OAAKA,GAAY,KAC1C7C,GAAO,GACH2C,EAAUC,OAAO,SAAAC,GAAQ,OAAKA,GAAY,KAC1C7C,GAAO,GACH2C,EAAUC,OAAO,SAAAC,GAAQ,OAAKA,GAAY,KAC1C7C,GAAO,GACH2C,EAAUC,OAAO,SAAAC,GAAQ,OAAKA,GAAY,KAC1CF,EFJJI,CAAYJ,EAAW3C,GACU0C,SGElC,SAASM,EAAQ9F,GAC5B,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,mCCZL,SAAmBsD,EAAKC,EAAQgD,GACnC,IAAIC,EAAS,CAAC,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,WAI5D,OADAA,EAsBJ,SAAuBA,EAAQD,GAC3B,MAAiB,gBAAVA,EACHC,EAAON,OAAO,SAAUO,GACpB,MAAiB,YAAVA,IAEXD,EAAON,OAAO,SAASO,GACnB,MAAiB,YAAVA,IA5BNC,CADTF,EAeJ,SAAwBA,EAAQjD,GAC5B,OAAOA,EAAS,IACZiD,EAAON,OAAO,SAAUO,GACpB,MAAiB,QAAVA,IAEXD,EApBKG,CADTH,EAMJ,SAAqBA,EAAQlD,GACzB,OAAOA,EAAM,GACTkD,EAAON,OAAO,SAAUO,GACpB,MAAiB,YAAVA,GACO,QAAVA,GACU,QAAVA,IAERD,EAbKH,CAAYG,EAAQlD,GACGC,GACDgD,GDQIK,CAAUC,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMC,KAAMuD,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAME,QAAS/C,EAAMiE,QAAQqC,SAASzD,MAAMkD,OAAQlE,KAAK,OACtKvC,EAAAC,EAAAC,cAAA,2BAAmB+F,EAAYc,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMC,KAAMuD,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMI,WAAW,GAAxH,QAAiIsC,EAAYc,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMC,KAAMuD,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMI,WAAWsD,OAAO,GAA7O,aACAjH,EAAAC,EAAAC,cAAA,yBEXL,SAAsBsD,EAAK0C,GAC9B,IAAIgB,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGrC,OADAA,ECNG,SAAmCA,EAAahB,GACnD,OAAyB,IAAlBA,EACHgB,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC5B,IAAlBjB,EACIgB,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC5B,IAAlBjB,EACIgB,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9CD,EDDEE,CADdF,EELG,SAAyBA,EAAa1D,GACzC,OAAOA,EAAM,GACT0D,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9C3D,GAAO,GACH0D,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9C3D,GAAO,GACH0D,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9C3D,GAAO,GACH0D,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9C3D,GAAO,GACH0D,EAAYd,OAAO,SAAAe,GAAS,OAAKA,GAAa,IAC9CD,EFNNG,CAAgBH,EAAa1D,GACU0C,GFQ5BoB,CAAaP,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMC,KAAMuD,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMI,WAAWsD,OAAO,GAA9H,qBACAjH,EAAAC,EAAAC,cAAA,gCKZL,SAAsBsD,EAAK0C,GAC9B,IAAIqB,EAAc,CAAC,MAAO,SAAU,QAGpC,OADAA,ECNG,SAAwCA,EAAarB,GACxD,OAAyB,IAAlBA,EACHqB,EAAYnB,OAAO,SAAAoB,GAAS,MAAmB,QAAdA,IACf,IAAlBtB,EACIqB,EAAYnB,OAAO,SAAAoB,GAAS,MACV,QAAdA,GACc,WAAdA,IACCD,EDDCE,CADdF,EELG,SAA8BA,EAAa/D,GAC9C,OAAOA,EAAM,GACT+D,EAAYnB,OAAO,SAAAoB,GAAS,MAAmB,QAAdA,IACjChE,GAAO,GACH+D,EAAYnB,OAAO,SAAAoB,GAAS,MAAmB,QAAdA,GAAqC,WAAdA,IACxDD,EFAMG,CAAqBH,EAAa/D,GACU0C,GLS1ByB,CAAaZ,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMC,KAAMuD,OAAOrG,EAAMiE,QAAQqC,SAASzD,MAAMI,WAAWpB,KAAK,OACnIvC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAK,gBACPR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,sEQkBDyH,mLAvBX,OACE5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACI7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACTH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAI,KACRR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,IAAK0H,IAAUxH,IAAI,OAGjDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAK2H,IAASzH,IAAI,OAI/CN,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,GAAGC,UAAWpI,IAChCC,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWC,IAC5CpI,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW3B,aAlBpCR,aCEEqC,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OAAO1I,EAAAC,EAAAC,cAACyI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5f1492d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.d36c0784.png\";","module.exports = __webpack_public_path__ + \"static/media/iconmonstr-home-6 (1).9e62ff1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconmonstr-medical-6.f28696f2.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport hero from './hero.png';\n\nexport default function home() {\n    return (\n        <div className='home'>\n            <div>\n                <h1>Start your fitness journey now!</h1>\n            </div>\n            <img src={hero} className='App-logo' alt='logo' />\n            <Link className='wholeButton' to= {'/get-started'}>\n            <h1 className='getStartedButton'>\n                        <div className='links'>\n                            Get Started\n                        </div>\n            </h1>\n            </Link>\n        </div>\n    );\n}","import React from 'react';\nimport './TextInput.css';\n\nconst textInput = (props) => {\n    return(\n        <span className='input-label'>\n            <div className='name-text'>\n                {\n                    getName(props.name, props.info)\n                }\n            </div>\n            <label>\n                <input type='text' name={props.name} value={props.value} onChange={props.textChangeEvent}/>\n            </label>\n            <div className='error'>{props.errorMessage}</div>\n            <br/>\n        </span>\n    );\n    \n    function getName(name, info) {\n        let nameCaps = name[0].toUpperCase() + name.substring(1);\n        return `${nameCaps} (${info})`;\n    }\n};\n\nexport default textInput;","import React from 'react';\nimport TextInput from './TextInput';\n\nconst textInputs = (props) => {\n    let info = ['Years', 'kg', 'cm', 'sessions / week', ''];\n    return(\n        <span>\n            {\n                props.names.map((name, i) => (\n                    <TextInput \n                        key = {i}\n                        info = {info[i]}\n                        name = {name}\n                        value = {props.fields[name]}\n                        errorMessage = {props.errors[name]}\n                        textChangeEvent = {props.textChangeEvent}\n                    />\n                ))\n            }\n        </span>\n    );\n};\n\nexport default textInputs;","import React from 'react';\nimport * as utils from '../get-started-utils/DropdownUtils';\n\nconst defaultDropdown = (props) => (\n    <option style={{display: utils.displayGoalDefaultOrNot(props.currVal)}} value='instruction'>\n        Choose your desired goal\n    </option>\n);\n\nexport default defaultDropdown;","function displayGoalDefaultOrNot(optionVal){\n    //This makes sure that the user doesn't ignore the goals option\n    if(optionVal === 'instruction'){\n        return 'block';\n    }\n    return 'none';\n}\n\nfunction kebabCaseToWords(words){\n    return words.split('-')\n        .map((word) => word[0].toUpperCase() +word.substring(1))\n        .join(' ');\n}\n\nexport {displayGoalDefaultOrNot, kebabCaseToWords};","import React from 'react';\nimport * as utils from '../get-started-utils/DropdownUtils';\n\nconst option = (props) => {\n    return(\n        <option value={props.value} >\n            {utils.kebabCaseToWords(props.value)}\n        </option>\n    );\n};\n\nexport default option;","import React from 'react';\nimport DefaultOption from './DefaultDropdown';\nimport Option from './Option';\nimport './Dropdown.css';\n\nconst dropdown = (props) => {\n    return(\n        <span className='full-dropdown'>\n            <div className='goal-name'>Goal</div>\n            <select value={props.currVal} onChange={props.change}>\n                <DefaultOption currVal={props.currVal}/>\n                {\n                    props.options.map((option) => (\n                        <Option value={option}/>\n                    ))\n                }\n            </select>\n            <div className='error'>{props.error}</div>\n        </span>\n    );\n};\n\nexport default dropdown;","import React from 'react';\nimport './SubmitButton.css';\n\nlet submitButton = (props) => (\n    <input className='submit-button' type='submit' value='Fit My Goal!'/>\n);\n\nexport default submitButton;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as startUtils from './get-started/get-started-utils/GetStartedUtils';\nimport TextInputs from './get-started/text-fields/TextInputs';\nimport Dropdown from './get-started/dropdown/Dropdown';\nimport SubmitButton from './get-started/submit-button/SubmitButton';\nimport './GetStarted.css';\n\nexport default class GetStarted extends Component{\n    constructor(){\n        super();\n        this.state = {\n            fields: {\n                age: '',\n                weight: '',\n                height: '',\n                activity: ''\n            },\n            error_msg: {\n                age: '',\n                weight: '',\n                height: '',\n                activity: '',\n                goal: ''\n            },\n            goalOptionVal: 'instruction'\n        };\n\n        this.allnames = Object.keys(this.state.fields);\n        this.options = ['fitness', 'lose-weight', 'gain-weight'];\n    }\n\n    handleChange(e){\n        let newValues = startUtils.updateFields(this.state.fields, e.target);\n        this.setState({\n            fields: newValues\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        let allGood = this.validateAllEverything();\n        if(allGood){\n            let toPass = this.state.fields;\n            toPass.goal = this.state.goalOptionVal;\n            this.props.history.push('/results', toPass);\n        }\n    }\n\n    validateAllEverything(){\n        let numsErrorMessages = this.validateNumericalFields();\n        let numsWithGoalsErr = startUtils.validateGoalsOptions(numsErrorMessages, this.state.goalOptionVal);\n        if(startUtils.checkIfEverythingIsGood(numsWithGoalsErr)){\n            return true;\n        }\n        this.setState({\n            error_msg: numsWithGoalsErr\n        });\n        return false;\n    }\n\n    changeAge(){\n        this.setState({\n            goalOptionVal: 'fitness'\n        });\n    }\n\n    \n    validateNumericalFields(){\n        let checkIfEmpty = startUtils.everythingFilled(this.state.fields);\n        return checkIfEmpty;\n    }\n\n    \n\n    handleGoalOptionsChange(e){\n        this.setState({\n            goalOptionVal: e.target.value\n        });\n    }\n\n    render(){\n        return(\n            <div className='get-started'>\n                <form className='get-started-form' onSubmit={(e) => this.handleSubmit(e)} >\n                    <TextInputs \n                        names={this.allnames} \n                        fields={this.state.fields} \n                        errors={this.state.error_msg} \n                        textChangeEvent={(e) => this.handleChange(e)}\n                    />\n                    <Dropdown \n                        options={this.options} \n                        currVal={this.state.goalOptionVal} \n                        change={(e) => this.handleGoalOptionsChange(e)}\n                        error={this.state.error_msg.goal}\n                    />\n                    <SubmitButton />\n                </form>\n            </div>\n        );\n    }\n}","\nexport function displayGoalDefaultOrNot(optionVal){\n    //This makes sure that the user doesn't ignore the goals option\n    if(optionVal === 'instruction'){\n        return 'block';\n    }\n    return 'none';\n}\n\nexport function kebabCaseToWords(words){\n    return words.split('-')\n        .map((word) => word[0].toUpperCase() +word.substring(1))\n        .join(' ');\n}\n\nexport function updateFields(prevVals, target){\n    return Object.keys(prevVals).reduce((newValues, field) => {\n        if(field === target.name){\n            newValues[field] = target.value; \n        }\n        else{\n            newValues[field] = prevVals[field];\n        }\n        return newValues;\n    }, {});\n}\n\nexport function validateGoalsOptions(curr_err, goals_val){\n    let isDefault = goals_val === 'instruction';\n    curr_err.goal = (isDefault) ? 'Please select an option' : '';\n    return curr_err;\n}\n\nexport function everythingFilled(fieldsObj){\n    let newErrorMessages = Object.keys(fieldsObj).reduce((newObj, field) => {\n        let empty = !fieldsObj[field];\n        newObj[field] = (empty) ? `Please fill in the ${field}` : '';\n        return newObj;\n    }, {});\n    return newErrorMessages;\n}\n\nexport function createEmptyFieldObj(valueArray){\n    return valueArray\n    .reduce((emptyValues, name) => {\n        emptyValues[name] = '';\n        return emptyValues;\n    }, {});\n}\n\n//If there are no error messages then it returns true\nexport function checkIfEverythingIsGood(error_messages){\n    return  Object.keys(error_messages).reduce((allGood, name) => {\n        return allGood && error_messages[name] === '';\n    }, true);\n}","import { filterByAge } from './filterByAge';\nimport { filterByActivityLevel } from './filterByActivityLevel';\n\nexport function getDuration(age, activityLevel) {\n    let durations = [10, 20, 30, 40, 50, 60];\n    durations = filterByAge(durations, age);\n    durations = filterByActivityLevel(durations, activityLevel);\n    return durations;\n};","export function filterByActivityLevel(durations, activityLevel) {\n    return activityLevel === 0 ?\n            durations.filter(function (duration) { return duration <= 30 }) :\n            activityLevel === 1 ?\n                durations.filter(function (duration) { return duration <= 40 }) :\n                activityLevel === 2 ?\n                    durations.filter(function (duration) { return duration <= 50 }) :\n                    durations;\n}","export function filterByAge(durations, age) {\n    return age > 80 ?\n        durations.filter(duration => (duration <= 20)) :\n        age >= 60 ?\n            durations.filter(duration => (duration <= 30)) :\n            age >= 55 ?\n                durations.filter(duration => (duration <= 40)) :\n                age >= 50 ?\n                    durations.filter(duration => (duration <= 50)) :\n                    durations;\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getSports } from './logic/getSports'\nimport { getDuration } from './logic/getDuration'\nimport { getFrequency } from './logic/getFrequency'\nimport { getIntensity } from './logic/getIntensity'\nimport './results.css';\n\nexport default function results(props) {\n    return (\n        <div className='results-info'>\n            <h1>Your personal fitness program!</h1>\n            <h2>Try these activities: {getSports(Number(props.history.location.state.age), Number(props.history.location.state.weight),(props.history.location.state.goals)).join(', ')}</h2>\n            <h2>Train between {getDuration(Number(props.history.location.state.age), Number(props.history.location.state.activity))[0]} and {getDuration(Number(props.history.location.state.age), Number(props.history.location.state.activity)).slice(-1)} minutes!</h2>\n            <h2>Train up to {getFrequency(Number(props.history.location.state.age), Number(props.history.location.state.activity)).slice(-1)} time/s per week!</h2>\n            <h2>Session intensity: {getIntensity(Number(props.history.location.state.age), Number(props.history.location.state.activity)).join(', ')}</h2>\n            <Link to= {'/get-started'}>\n                <div className='links'>\n                    Back to get started!\n                </div>\n            </Link>\n        </div>\n    );\n}","export function getSports(age, weight, goals) {\n    let sports = ['run', 'bike', 'swim', 'row', 'walk', 'yoga', 'weights']\n    sports = filterByAge(sports, age);\n    sports = filterByWeight(sports, weight);\n    sports = filterByGoals(sports, goals);\n    return sports;\n}\n\nfunction filterByAge(sports, age) {\n    return age > 60 ?\n        sports.filter(function (sport) {\n            return sport !== 'weights' &&\n                sport !== 'run' &&\n                sport !== 'row';\n        }) :\n        sports;\n}\n\nfunction filterByWeight(sports, weight) {\n    return weight > 100 ?\n        sports.filter(function (sport) {\n            return sport !== 'run';\n        }) :\n        sports;\n}\n\nfunction filterByGoals(sports, goals) {\n    return goals === 'lose-weight' ?\n        sports.filter(function (sport) {\n            return sport !== 'weights';\n        }) :\n        sports.filter(function(sport){\n            return sport === 'weights';\n        });\n}\n","import { filterFreqByAge } from \"./filterFreqByAge\";\nimport { filterFreqByActivityLevel } from \"./filterFreqByActivityLevel\";\n\nexport function getFrequency(age, activityLevel) {\n    let frequencies = [1, 2, 3, 4, 5, 6, 7];\n    frequencies = filterFreqByAge(frequencies, age);\n    frequencies = filterFreqByActivityLevel(frequencies, activityLevel);\n    return frequencies;\n};","export function filterFreqByActivityLevel(frequencies, activityLevel) {\n    return activityLevel === 0 ?\n        frequencies.filter(frequency => (frequency <= 2)) :\n        activityLevel === 1 ?\n            frequencies.filter(frequency => (frequency <= 3)) :\n            activityLevel === 2 ?\n                frequencies.filter(frequency => (frequency <= 5)) :\n                frequencies;\n};","export function filterFreqByAge(frequencies, age) {\n    return age > 60 ?\n        frequencies.filter(frequency => (frequency <= 2)) :\n        age >= 56 ?\n            frequencies.filter(frequency => (frequency <= 3)) :\n            age >= 51 ?\n                frequencies.filter(frequency => (frequency <= 4)) :\n                age >= 46 ?\n                    frequencies.filter(frequency => (frequency <= 5)) :\n                    age >= 40 ?\n                        frequencies.filter(frequency => (frequency <= 6)) :\n                        frequencies;\n}","import { filterIntensityByAge } from \"./filterIntensityByAge\";\nimport { filterIntensityByActivityLevel } from \"./filterIntensityByActivityLevel\";\n\nexport function getIntensity(age, activityLevel) {\n    let intensities = ['low', 'medium', 'high'];\n    intensities = filterIntensityByAge(intensities, age);\n    intensities = filterIntensityByActivityLevel(intensities, activityLevel);\n    return intensities;\n};","export function filterIntensityByActivityLevel(intensities, activityLevel) {\n    return activityLevel === 0 ?\n        intensities.filter(intensity => (intensity === 'low')) :\n        activityLevel === 1 ?\n            intensities.filter(intensity => (\n                intensity === 'low' ||\n                intensity === 'medium'\n            )) : intensities;\n};","export function filterIntensityByAge(intensities, age) {\n    return age > 60 ?\n        intensities.filter(intensity => (intensity === 'low')) :\n        age >= 50 ?\n            intensities.filter(intensity => (intensity === 'low' || intensity === 'medium')) :\n            intensities;\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport home from './home'\nimport getStarted from './getStarted'\nimport results from './results'\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport homeIcon from './iconmonstr-home-6 (1).svg'\nimport fitIcon from './iconmonstr-medical-6.svg'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <div className='App'>\n            <nav className='banner'>\n            <div className='icon'>\n                  <Link to={'/'}> \n                    <img className='imagee' src={homeIcon} alt=''/> \n                  </Link>\n                </div>\n              <div className='icon'>\n                  <img className='imagee2' src={fitIcon} alt=''/> \n              </div>\n                \n            </nav>\n              <Route exact path='' component={home} />\n              <Route exact path='/get-started' component={getStarted} />\n              <Route exact path='/results' component={results} />\n          </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}